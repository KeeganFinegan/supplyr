{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Orders.css';\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deleteOffer = async orderId => {\n  const url = `http://localhost:8080/api/v1/offers/delete/`;\n  const token = Cookies.get('token');\n\n  try {\n    const config = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    const response = await fetch(url + orderId, config);\n\n    if (response.ok) {\n      const decode = jwt_decode(token);\n      const newDataResponse = await fetch('http://localhost:8080/api/v1/users/' + decode.sub());\n      const data = newDataResponse.json();\n      return data.organisationalUnit.offers; //return json\n    } else {\n      console.log(response.json()); //\n    }\n  } catch (error) {//\n  }\n};\n\nexport const Orders = props => {\n  _s();\n\n  const [orders, setOrders] = useState(props.orderList);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"orders-container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times-circle icon\",\n          onClick: () => {\n            props.updateClickedState(props.type);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: [props.type, \" Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"table-row table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-header \",\n                children: \"Asset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-header\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-header\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-header\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map((order, index) => {\n              if (order.type === props.type) {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-body\",\n                    children: order.asset.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-body\",\n                    children: order.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-body\",\n                    children: order.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-body\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: async () => {\n                        await deleteOffer(order.id);\n                        const updatedData = await props.fetchUserData();\n                        setOrders(updatedData.userData.organisationalUnit.offers);\n                      },\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"xigL+1A0yFSpP2lmlMpx3mwmpks=\");\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Orders.js"],"names":["React","useState","Container","Row","Col","Table","Button","Cookies","jwt_decode","deleteOffer","orderId","url","token","get","config","method","headers","Accept","response","fetch","ok","decode","newDataResponse","sub","data","json","organisationalUnit","offers","console","log","error","Orders","props","orders","setOrders","orderList","updateClickedState","type","map","order","index","asset","name","quantity","price","id","updatedData","fetchUserData","userData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Orders.css';\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport jwt_decode from 'jwt-decode';\n\nconst deleteOffer = async (orderId) => {\n  const url = `http://localhost:8080/api/v1/offers/delete/`;\n\n  const token = Cookies.get('token');\n\n  try {\n    const config = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n    const response = await fetch(url + orderId, config);\n\n    if (response.ok) {\n      const decode = jwt_decode(token);\n      const newDataResponse = await fetch(\n        'http://localhost:8080/api/v1/users/' + decode.sub()\n      );\n      const data = newDataResponse.json();\n      return data.organisationalUnit.offers;\n\n      //return json\n    } else {\n      console.log(response.json());\n      //\n    }\n  } catch (error) {\n    //\n  }\n};\n\nexport const Orders = (props) => {\n  const [orders, setOrders] = useState(props.orderList);\n\n  return (\n    <Container className=\"orders-container\">\n      <Row className=\"column\">\n        <Col className=\"column\">\n          <i\n            className=\"fas fa-times-circle icon\"\n            onClick={() => {\n              props.updateClickedState(props.type);\n            }}\n          ></i>\n          <h3 className=\"title\">{props.type} Orders</h3>\n\n          <Table striped hover size=\"sm\">\n            <thead>\n              <tr className=\"table-row table-header\">\n                <th className=\"table-header \">Asset</th>\n                <th className=\"table-header\">Quantity</th>\n                <th className=\"table-header\">Price</th>\n                <th className=\"table-header\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order, index) => {\n                if (order.type === props.type) {\n                  return (\n                    <tr key={index}>\n                      <td className=\"table-body\">{order.asset.name}</td>\n                      <td className=\"table-body\">{order.quantity}</td>\n                      <td className=\"table-body\">{order.price}</td>\n                      <td className=\"table-body\">\n                        <Button\n                          onClick={async () => {\n                            await deleteOffer(order.id);\n                            const updatedData = await props.fetchUserData();\n                            setOrders(\n                              updatedData.userData.organisationalUnit.offers\n                            );\n                          }}\n                        >\n                          delete\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                }\n              })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}