{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Chart.js\";\nimport { Line } from 'react-chartjs-2';\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart = props => {\n  let dataset = props.tradeData.map(obj => obj.price);\n  let labels = props.tradeData.map(obj => obj.timestamp); // Format data for use with Chart.js\n\n  let data = {\n    // Reverse labels array to be in the correct order\n    labels: labels.reverse(),\n    datasets: [{\n      label: props.asset + ' Price History',\n      backgroundColor: 'rgba(50, 166, 255, 0.62) ',\n      data: dataset.reverse(),\n      height: '400px',\n      width: '500px',\n      borderColor: 'rgba(50, 166, 255, 0.62) ',\n      color: 'rgba(50, 166, 255, 0.62) '\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: {\n        responsive: true\n      },\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Chart.js"],"names":["Line","React","useEffect","useState","Chart","props","dataset","tradeData","map","obj","price","labels","timestamp","data","reverse","datasets","label","asset","backgroundColor","height","width","borderColor","color","responsive"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC9B,MAAIC,OAAO,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,GAAD,IAASA,GAAG,CAACC,KAAjC,CAAd;AAEA,MAAIC,MAAM,GAAGN,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,GAAD,IAASA,GAAG,CAACG,SAAjC,CAAb,CAH8B,CAK9B;;AACA,MAAIC,IAAI,GAAG;AACT;AACAF,IAAAA,MAAM,EAAEA,MAAM,CAACG,OAAP,EAFC;AAGTC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEX,KAAK,CAACY,KAAN,GAAc,gBADvB;AAEEC,MAAAA,eAAe,EAAE,2BAFnB;AAGEL,MAAAA,IAAI,EAAEP,OAAO,CAACQ,OAAR,EAHR;AAIEK,MAAAA,MAAM,EAAE,OAJV;AAKEC,MAAAA,KAAK,EAAE,OALT;AAMEC,MAAAA,WAAW,EAAE,2BANf;AAOEC,MAAAA,KAAK,EAAE;AAPT,KADQ;AAHD,GAAX;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE;AADL,OADX;AAIE,MAAA,IAAI,EAAEV;AAJR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhCM;KAAMT,K","sourcesContent":["import { Line } from 'react-chartjs-2';\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\n\nexport const Chart = (props) => {\n  let dataset = props.tradeData.map((obj) => obj.price);\n\n  let labels = props.tradeData.map((obj) => obj.timestamp);\n\n  // Format data for use with Chart.js\n  let data = {\n    // Reverse labels array to be in the correct order\n    labels: labels.reverse(),\n    datasets: [\n      {\n        label: props.asset + ' Price History',\n        backgroundColor: 'rgba(50, 166, 255, 0.62) ',\n        data: dataset.reverse(),\n        height: '400px',\n        width: '500px',\n        borderColor: 'rgba(50, 166, 255, 0.62) ',\n        color: 'rgba(50, 166, 255, 0.62) ',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <Line\n        options={{\n          responsive: true,\n        }}\n        data={data}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}