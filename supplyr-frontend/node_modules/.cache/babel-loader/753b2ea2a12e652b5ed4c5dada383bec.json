{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Account/PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport './Account.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cookies from 'js-cookie';\nimport styles from '../BootstrapStyles/styles';\nimport 'react-toastify/dist/ReactToastify.css';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { POSITION } from 'react-toastify/dist/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst notify = () => {\n  toast('Password successfully changed', {\n    position: toast.POSITION.BOTTOM_RIGHT\n  });\n};\n\nconst updatePassword = async (password, setResponse) => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  const decoded = jwtDecode(token);\n  return fetch(url + decoded.sub, {\n    method: 'PUT',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password\n    })\n  }).then(res => res.json()).then(data => {\n    console.log(data);\n    setResponse(data);\n  }).catch(error => {\n    console.log(error.message);\n    setResponse(error);\n  });\n};\n\nconst handleSubmit = (password, confirm, setResponse) => {\n  if (password !== confirm) {\n    setResponse({\n      status: 'NO_MATCH',\n      message: 'passwords do not match'\n    });\n  } else {\n    updatePassword(password, setResponse);\n  }\n};\n\nexport const PasswordReset = () => {\n  _s();\n\n  const [password, setPassword] = useState(null);\n  const [confirm, setConfirm] = useState(null);\n  const [response, setResponse] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-card-title\",\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"admin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-input-title\",\n          children: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"admin-input\",\n          placeholder: \"new password...\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"admin-input\",\n          placeholder: \"confirm password...\",\n          onChange: e => {\n            setConfirm(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), response ? response.status === 'NOT_FOUND' || response.status === 'NO_MATCH' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-status-error\",\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : notify() : null, password && confirm ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"user-button \",\n        onClick: () => {\n          handleSubmit(password, confirm, setResponse);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        className: \"user-button \",\n        variant: \"secondary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"oVLxTWKpLi8cv3LASpZe2tTqyV4=\");\n\n_c = PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Account/PasswordReset.js"],"names":["React","useState","Container","Form","Button","Alert","Cookies","styles","jwtDecode","toast","POSITION","configure","notify","position","BOTTOM_RIGHT","updatePassword","password","setResponse","url","token","get","decoded","fetch","sub","method","headers","Authorization","accept","body","JSON","stringify","then","res","json","data","console","log","catch","error","message","handleSubmit","confirm","status","PasswordReset","setPassword","setConfirm","response","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport './Account.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cookies from 'js-cookie';\nimport styles from '../BootstrapStyles/styles';\nimport 'react-toastify/dist/ReactToastify.css';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { POSITION } from 'react-toastify/dist/utils';\n\ntoast.configure();\n\nconst notify = () => {\n  toast('Password successfully changed', {\n    position: toast.POSITION.BOTTOM_RIGHT,\n  });\n};\nconst updatePassword = async (password, setResponse) => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  const decoded = jwtDecode(token);\n\n  return fetch(url + decoded.sub, {\n    method: 'PUT',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ password: password }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setResponse(data);\n    })\n    .catch((error) => {\n      console.log(error.message);\n      setResponse(error);\n    });\n};\n\nconst handleSubmit = (password, confirm, setResponse) => {\n  if (password !== confirm) {\n    setResponse({\n      status: 'NO_MATCH',\n      message: 'passwords do not match',\n    });\n  } else {\n    updatePassword(password, setResponse);\n  }\n};\n\nexport const PasswordReset = () => {\n  const [password, setPassword] = useState(null);\n  const [confirm, setConfirm] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  return (\n    <Container>\n      <div className=\"admin-card\">\n        <h2 className=\"admin-card-title\">Password Reset</h2>\n        <Form className=\"admin-form\">\n          <p className=\"admin-input-title\">New password</p>\n          <input\n            type=\"password\"\n            className=\"admin-input\"\n            placeholder=\"new password...\"\n            onChange={(e) => setPassword(e.target.value)}\n          ></input>\n          <input\n            type=\"password\"\n            className=\"admin-input\"\n            placeholder=\"confirm password...\"\n            onChange={(e) => {\n              setConfirm(e.target.value);\n            }}\n          ></input>\n        </Form>\n        {response ? (\n          response.status === 'NOT_FOUND' || response.status === 'NO_MATCH' ? (\n            <p className=\"response-status-error\">{response.message}</p>\n          ) : (\n            notify()\n          )\n        ) : null}\n\n        {password && confirm ? (\n          <Button\n            variant=\"secondary\"\n            className=\"user-button \"\n            onClick={() => {\n              handleSubmit(password, confirm, setResponse);\n            }}\n          >\n            Submit\n          </Button>\n        ) : (\n          <Button disabled className=\"user-button \" variant=\"secondary\">\n            Submit\n          </Button>\n        )}\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}