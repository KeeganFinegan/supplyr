{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Account/PasswordReset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Tab, Container, Nav, Row, Col, Form, Dropdown, DropdownButton, Button } from 'react-bootstrap';\nimport './Account.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cookies from 'js-cookie';\nimport styles from '../BootstrapStyles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst updatePassword = async (password, setResponse) => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  organisationalUnit = role === 'ADMIN' ? 'admin' : organisationalUnit;\n  return fetch(url + organisationalUnit, {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json()).then(data => {\n    console.log(data.status);\n    setResponse(data);\n  }).catch(error => {\n    console.log(error.message);\n    setResponse(error);\n  });\n};\n\nexport const PasswordReset = () => {\n  _s();\n\n  const [password, setPassword] = useState(null);\n  const [response, setResponse] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"admin-card-title\",\n        children: \"Password Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"admin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-input-title\",\n          children: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"admin-input\",\n          placeholder: \"New password...\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), response ? response.status === 'NOT_FOUND' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-status-error\",\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-status-success\",\n        children: \"User succesfully created!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : null, password ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"user-button \",\n        onClick: () => {\n          createUser(organisationalUnit, username, password, role, setResponse);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        className: \"user-button \",\n        variant: \"secondary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordReset, \"wUd/fEH0z6NgNj+504GL44iLXqM=\");\n\n_c = PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Account/PasswordReset.js"],"names":["React","useState","Tab","Container","Nav","Row","Col","Form","Dropdown","DropdownButton","Button","Cookies","styles","updatePassword","password","setResponse","url","token","get","organisationalUnit","role","fetch","method","headers","Authorization","accept","body","JSON","stringify","username","then","res","json","data","console","log","status","catch","error","message","PasswordReset","setPassword","response","e","target","value","createUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Tab,\n  Container,\n  Nav,\n  Row,\n  Col,\n  Form,\n  Dropdown,\n  DropdownButton,\n  Button,\n} from 'react-bootstrap';\nimport './Account.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cookies from 'js-cookie';\nimport styles from '../BootstrapStyles/styles';\n\nconst updatePassword = async (password, setResponse) => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  organisationalUnit = role === 'ADMIN' ? 'admin' : organisationalUnit;\n\n  return fetch(url + organisationalUnit, {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username: username, password: password }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data.status);\n      setResponse(data);\n    })\n    .catch((error) => {\n      console.log(error.message);\n      setResponse(error);\n    });\n};\n\nexport const PasswordReset = () => {\n  const [password, setPassword] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  return (\n    <Container>\n      <div className=\"admin-card\">\n        <h2 className=\"admin-card-title\">Password Reset</h2>\n        <Form className=\"admin-form\">\n          <p className=\"admin-input-title\">New password</p>\n          <input\n            type=\"password\"\n            className=\"admin-input\"\n            placeholder=\"New password...\"\n            onChange={(e) => setPassword(e.target.value)}\n          ></input>\n        </Form>\n        {response ? (\n          response.status === 'NOT_FOUND' ? (\n            <p className=\"response-status-error\">{response.message}</p>\n          ) : (\n            <p className=\"response-status-success\">User succesfully created!</p>\n          )\n        ) : null}\n\n        {password ? (\n          <Button\n            variant=\"secondary\"\n            className=\"user-button \"\n            onClick={() => {\n              createUser(\n                organisationalUnit,\n                username,\n                password,\n                role,\n                setResponse\n              );\n            }}\n          >\n            Submit\n          </Button>\n        ) : (\n          <Button disabled className=\"user-button \" variant=\"secondary\">\n            Submit\n          </Button>\n        )}\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}