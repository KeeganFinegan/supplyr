{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Notificaition/Notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Cookie from 'js-cookie';\nimport jwt_decode from 'jwt-decode';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Notification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst notify = () => {\n  toast('Update', {\n    position: toast.POSITION.BOTTOM_RIGHT\n  });\n};\n\nconst fetchUserData = async numTrades => {\n  let token = Cookie.get('token');\n  let decoded = jwt_decode(token);\n  let username = decoded.sub;\n  const userUrl = `http://localhost:8080/api/v1/users/`;\n  const userResponse = await fetch(userUrl + username, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  const userData = await userResponse.json();\n  toast(userData.username, {\n    position: toast.POSITION.BOTTOM_RIGHT\n  });\n  return userData;\n};\n\nexport const Notification = () => {\n  _s();\n\n  const [orders, setOrders] = useState(null);\n  const [numTrades, setNumTrades] = useState(0);\n  useEffect(() => {\n    function getAlerts() {\n      setOrders(fetchUserData(numTrades, setNumTrades));\n    }\n\n    getAlerts();\n    const interval = setInterval(() => getAlerts(), 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Notification, \"kHXit72I01bPadHwMjsZoUn6ELo=\");\n\n_c = Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Notificaition/Notification.js"],"names":["React","useState","useEffect","Component","toast","ToastContainer","Cookie","jwt_decode","configure","notify","position","POSITION","BOTTOM_RIGHT","fetchUserData","numTrades","token","get","decoded","username","sub","userUrl","userResponse","fetch","method","headers","Authorization","accept","userData","json","Notification","orders","setOrders","setNumTrades","getAlerts","interval","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,uCAAP;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,sCAAP;AACA,OAAO,uCAAP;AACA,OAAO,oBAAP;;AAEAH,KAAK,CAACI,SAAN;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnBL,EAAAA,KAAK,CAAC,QAAD,EAAW;AACdM,IAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,CAAeC;AADX,GAAX,CAAL;AAGD,CAJD;;AAMA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAIC,KAAK,GAAGT,MAAM,CAACU,GAAP,CAAW,OAAX,CAAZ;AACA,MAAIC,OAAO,GAAGV,UAAU,CAACQ,KAAD,CAAxB;AACA,MAAIG,QAAQ,GAAGD,OAAO,CAACE,GAAvB;AAEA,QAAMC,OAAO,GAAI,qCAAjB;AACA,QAAMC,YAAY,GAAG,MAAMC,KAAK,CAACF,OAAO,GAAGF,QAAX,EAAqB;AACnDK,IAAAA,MAAM,EAAE,KAD2C;AAEnDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYV,KADpB;AAEPW,MAAAA,MAAM,EAAE,kBAFD;AAGP,sBAAgB;AAHT;AAF0C,GAArB,CAAhC;AAQA,QAAMC,QAAQ,GAAG,MAAMN,YAAY,CAACO,IAAb,EAAvB;AAEAxB,EAAAA,KAAK,CAACuB,QAAQ,CAACT,QAAV,EAAoB;AACvBR,IAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,CAAeC;AADF,GAApB,CAAL;AAIA,SAAOe,QAAP;AACD,CArBD;;AAuBA,OAAO,MAAME,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,SAAD,EAAYkB,YAAZ,IAA4B/B,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAAS+B,SAAT,GAAqB;AACnBF,MAAAA,SAAS,CAAClB,aAAa,CAACC,SAAD,EAAYkB,YAAZ,CAAd,CAAT;AACD;;AACDC,IAAAA,SAAS;AACT,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAMF,SAAS,EAAhB,EAAoB,KAApB,CAA5B;AACA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,sBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAML,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Cookie from 'js-cookie';\nimport jwt_decode from 'jwt-decode';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Notification.css';\n\ntoast.configure();\n\nconst notify = () => {\n  toast('Update', {\n    position: toast.POSITION.BOTTOM_RIGHT,\n  });\n};\n\nconst fetchUserData = async (numTrades) => {\n  let token = Cookie.get('token');\n  let decoded = jwt_decode(token);\n  let username = decoded.sub;\n\n  const userUrl = `http://localhost:8080/api/v1/users/`;\n  const userResponse = await fetch(userUrl + username, {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token,\n      accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  });\n  const userData = await userResponse.json();\n\n  toast(userData.username, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n  });\n\n  return userData;\n};\n\nexport const Notification = () => {\n  const [orders, setOrders] = useState(null);\n  const [numTrades, setNumTrades] = useState(0);\n\n  useEffect(() => {\n    function getAlerts() {\n      setOrders(fetchUserData(numTrades, setNumTrades));\n    }\n    getAlerts();\n    const interval = setInterval(() => getAlerts(), 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return <ToastContainer />;\n};\n"]},"metadata":{},"sourceType":"module"}