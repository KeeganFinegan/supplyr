{"ast":null,"code":"(function () {\n  var $D = Date;\n  $D.Grammar = {};\n\n  var _ = $D.Parsing.Operators,\n      g = $D.Grammar,\n      t = $D.Translator,\n      _fn; // Allow rolling up into general purpose rules\n\n\n  _fn = function () {\n    return _.each(_.any.apply(null, arguments), _.not(g.ctoken2(\"timeContext\")));\n  };\n\n  g.datePartDelimiter = _.rtoken(/^([\\s\\-\\.\\,\\/\\x27]+)/);\n  g.timePartDelimiter = _.stoken(\":\");\n  g.whiteSpace = _.rtoken(/^\\s*/);\n  g.generalDelimiter = _.rtoken(/^(([\\s\\,]|at|@|on)+)/);\n  var _C = {};\n\n  g.ctoken = function (keys) {\n    var fn = _C[keys];\n\n    if (!fn) {\n      var c = Date.CultureInfo.regexPatterns;\n      var kx = keys.split(/\\s+/),\n          px = [];\n\n      for (var i = 0; i < kx.length; i++) {\n        px.push(_.replace(_.rtoken(c[kx[i]]), kx[i]));\n      }\n\n      fn = _C[keys] = _.any.apply(null, px);\n    }\n\n    return fn;\n  };\n\n  g.ctoken2 = function (key) {\n    return _.rtoken(Date.CultureInfo.regexPatterns[key]);\n  };\n\n  var cacheProcessRtoken = function (key, token, type, eachToken) {\n    if (eachToken) {\n      g[key] = _.cache(_.process(_.each(_.rtoken(token), _.optional(g.ctoken2(eachToken))), type));\n    } else {\n      g[key] = _.cache(_.process(_.rtoken(token), type));\n    }\n  };\n\n  var cacheProcessCtoken = function (token, type) {\n    return _.cache(_.process(g.ctoken2(token), type));\n  };\n\n  var _F = {}; //function cache\n\n  var _get = function (f) {\n    _F[f] = _F[f] || g.format(f)[0];\n    return _F[f];\n  };\n\n  g.allformats = function (fx) {\n    var rx = [];\n\n    if (fx instanceof Array) {\n      for (var i = 0; i < fx.length; i++) {\n        rx.push(_get(fx[i]));\n      }\n    } else {\n      rx.push(_get(fx));\n    }\n\n    return rx;\n  };\n\n  g.formats = function (fx) {\n    if (fx instanceof Array) {\n      var rx = [];\n\n      for (var i = 0; i < fx.length; i++) {\n        rx.push(_get(fx[i]));\n      }\n\n      return _.any.apply(null, rx);\n    } else {\n      return _get(fx);\n    }\n  };\n\n  var grammarFormats = {\n    timeFormats: function () {\n      var i,\n          RTokenKeys = [\"h\", \"hh\", \"H\", \"HH\", \"m\", \"mm\", \"s\", \"ss\", \"ss.s\", \"z\", \"zz\"],\n          RToken = [/^(0[0-9]|1[0-2]|[1-9])/, /^(0[0-9]|1[0-2])/, /^([0-1][0-9]|2[0-3]|[0-9])/, /^([0-1][0-9]|2[0-3])/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^[0-5][0-9]\\.[0-9]{1,3}/, /^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/, /^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/],\n          tokens = [t.hour, t.hour, t.hour, t.minute, t.minute, t.second, t.second, t.secondAndMillisecond, t.timezone, t.timezone, t.timezone];\n\n      for (i = 0; i < RTokenKeys.length; i++) {\n        cacheProcessRtoken(RTokenKeys[i], RToken[i], tokens[i]);\n      }\n\n      g.hms = _.cache(_.sequence([g.H, g.m, g.s], g.timePartDelimiter));\n      g.t = cacheProcessCtoken(\"shortMeridian\", t.meridian);\n      g.tt = cacheProcessCtoken(\"longMeridian\", t.meridian);\n      g.zzz = cacheProcessCtoken(\"timezone\", t.timezone);\n      g.timeSuffix = _.each(_.ignore(g.whiteSpace), _.set([g.tt, g.zzz]));\n      g.time = _.each(_.optional(_.ignore(_.stoken(\"T\"))), g.hms, g.timeSuffix);\n    },\n    dateFormats: function () {\n      // pre-loaded rules for different date part order preferences\n      var _setfn = function () {\n        return _.set(arguments, g.datePartDelimiter);\n      };\n\n      var i,\n          RTokenKeys = [\"d\", \"dd\", \"M\", \"MM\", \"y\", \"yy\", \"yyy\", \"yyyy\"],\n          RToken = [/^([0-2]\\d|3[0-1]|\\d)/, /^([0-2]\\d|3[0-1])/, /^(1[0-2]|0\\d|\\d)/, /^(1[0-2]|0\\d)/, /^(\\d+)/, /^(\\d\\d)/, /^(\\d\\d?\\d?\\d?)/, /^(\\d\\d\\d\\d)/],\n          tokens = [t.day, t.day, t.month, t.month, t.year, t.year, t.year, t.year],\n          eachToken = [\"ordinalSuffix\", \"ordinalSuffix\"];\n\n      for (i = 0; i < RTokenKeys.length; i++) {\n        cacheProcessRtoken(RTokenKeys[i], RToken[i], tokens[i], eachToken[i]);\n      }\n\n      g.MMM = g.MMMM = _.cache(_.process(g.ctoken(\"jan feb mar apr may jun jul aug sep oct nov dec\"), t.month));\n      g.ddd = g.dddd = _.cache(_.process(g.ctoken(\"sun mon tue wed thu fri sat\"), function (s) {\n        return function () {\n          this.weekday = s;\n        };\n      }));\n      g.day = _fn(g.d, g.dd);\n      g.month = _fn(g.M, g.MMM);\n      g.year = _fn(g.yyyy, g.yy);\n      g.mdy = _setfn(g.ddd, g.month, g.day, g.year);\n      g.ymd = _setfn(g.ddd, g.year, g.month, g.day);\n      g.dmy = _setfn(g.ddd, g.day, g.month, g.year);\n\n      g.date = function (s) {\n        return (g[Date.CultureInfo.dateElementOrder] || g.mdy).call(this, s);\n      };\n    },\n    relative: function () {\n      // relative date / time expressions\n      g.orientation = _.process(g.ctoken(\"past future\"), function (s) {\n        return function () {\n          this.orient = s;\n        };\n      });\n      g.operator = _.process(g.ctoken(\"add subtract\"), function (s) {\n        return function () {\n          this.operator = s;\n        };\n      });\n      g.rday = _.process(g.ctoken(\"yesterday tomorrow today now\"), t.rday);\n      g.unit = _.process(g.ctoken(\"second minute hour day week month year\"), function (s) {\n        return function () {\n          this.unit = s;\n        };\n      });\n    }\n  };\n\n  g.buildGrammarFormats = function () {\n    // these need to be rebuilt every time the language changes.\n    _C = {};\n    grammarFormats.timeFormats();\n    grammarFormats.dateFormats();\n    grammarFormats.relative();\n    g.value = _.process(_.rtoken(/^([-+]?\\d+)?(st|nd|rd|th)?/), function (s) {\n      return function () {\n        this.value = s.replace(/\\D/g, \"\");\n      };\n    });\n    g.expression = _.set([g.rday, g.operator, g.value, g.unit, g.orientation, g.ddd, g.MMM]);\n    g.format = _.process(_.many(_.any( // translate format specifiers into grammar rules\n    _.process(_.rtoken(/^(dd?d?d?(?!e)|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function (fmt) {\n      if (g[fmt]) {\n        return g[fmt];\n      } else {\n        throw $D.Parsing.Exception(fmt);\n      }\n    }), // translate separator tokens into token rules\n    _.process(_.rtoken(/^[^dMyhHmstz]+/), // all legal separators \n    function (s) {\n      return _.ignore(_.stoken(s));\n    }))), // construct the parser ...\n    function (rules) {\n      return _.process(_.each.apply(null, rules), t.finishExact);\n    }); // starting rule for general purpose grammar\n\n    g._start = _.process(_.set([g.date, g.time, g.expression], g.generalDelimiter, g.whiteSpace), t.finish);\n  };\n\n  g.buildGrammarFormats(); // parsing date format specifiers - ex: \"h:m:s tt\" \n  // this little guy will generate a custom parser based\n  // on the format string, ex: g.format(\"h:m:s tt\")\n  // check for these formats first\n\n  g._formats = g.formats([\"\\\"yyyy-MM-ddTHH:mm:ssZ\\\"\", \"yyyy-MM-ddTHH:mm:ss.sz\", \"yyyy-MM-ddTHH:mm:ssZ\", \"yyyy-MM-ddTHH:mm:ssz\", \"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mmZ\", \"yyyy-MM-ddTHH:mmz\", \"yyyy-MM-ddTHH:mm\", \"ddd, MMM dd, yyyy H:mm:ss tt\", \"ddd MMM d yyyy HH:mm:ss zzz\", \"MMddyyyy\", \"ddMMyyyy\", \"Mddyyyy\", \"ddMyyyy\", \"Mdyyyy\", \"dMyyyy\", \"yyyy\", \"Mdyy\", \"dMyy\", \"d\"]); // real starting rule: tries selected formats first, \n  // then general purpose rule\n\n  g.start = function (s) {\n    try {\n      var r = g._formats.call({}, s);\n\n      if (r[1].length === 0) {\n        return r;\n      }\n    } catch (e) {}\n\n    return g._start.call({}, s);\n  };\n})();","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/node_modules/datejs/src/core/parsing_grammar.js"],"names":["$D","Date","Grammar","_","Parsing","Operators","g","t","Translator","_fn","each","any","apply","arguments","not","ctoken2","datePartDelimiter","rtoken","timePartDelimiter","stoken","whiteSpace","generalDelimiter","_C","ctoken","keys","fn","c","CultureInfo","regexPatterns","kx","split","px","i","length","push","replace","key","cacheProcessRtoken","token","type","eachToken","cache","process","optional","cacheProcessCtoken","_F","_get","f","format","allformats","fx","rx","Array","formats","grammarFormats","timeFormats","RTokenKeys","RToken","tokens","hour","minute","second","secondAndMillisecond","timezone","hms","sequence","H","m","s","meridian","tt","zzz","timeSuffix","ignore","set","time","dateFormats","_setfn","day","month","year","MMM","MMMM","ddd","dddd","weekday","d","dd","M","yyyy","yy","mdy","ymd","dmy","date","dateElementOrder","call","relative","orientation","orient","operator","rday","unit","buildGrammarFormats","value","expression","many","fmt","Exception","rules","finishExact","_start","finish","_formats","start","r","e"],"mappings":"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","sourcesContent":["(function () {\n\tvar $D = Date;\n\t$D.Grammar = {};\n\tvar _ = $D.Parsing.Operators, g = $D.Grammar, t = $D.Translator, _fn;\n\t// Allow rolling up into general purpose rules\n\t_fn = function () {\n\t\treturn _.each(_.any.apply(null, arguments), _.not(g.ctoken2(\"timeContext\")));\n\t};\n\t\n\tg.datePartDelimiter = _.rtoken(/^([\\s\\-\\.\\,\\/\\x27]+)/);\n\tg.timePartDelimiter = _.stoken(\":\");\n\tg.whiteSpace = _.rtoken(/^\\s*/);\n\tg.generalDelimiter = _.rtoken(/^(([\\s\\,]|at|@|on)+)/);\n  \n\tvar _C = {};\n\tg.ctoken = function (keys) {\n\t\tvar fn = _C[keys];\n\t\tif (! fn) {\n\t\t\tvar c = Date.CultureInfo.regexPatterns;\n\t\t\tvar kx = keys.split(/\\s+/), px = [];\n\t\t\tfor (var i = 0; i < kx.length ; i++) {\n\t\t\t\tpx.push(_.replace(_.rtoken(c[kx[i]]), kx[i]));\n\t\t\t}\n\t\t\tfn = _C[keys] = _.any.apply(null, px);\n\t\t}\n\t\treturn fn;\n\t};\n\tg.ctoken2 = function (key) {\n\t\treturn _.rtoken(Date.CultureInfo.regexPatterns[key]);\n\t};\n\tvar cacheProcessRtoken = function (key, token, type, eachToken) {\n\t\tif (eachToken) {\n\t\t\tg[key] = _.cache(_.process(_.each(_.rtoken(token),_.optional(g.ctoken2(eachToken))), type));\n\t\t} else {\n\t\t\tg[key] = _.cache(_.process(_.rtoken(token), type));\n\t\t}\n\t};\n\tvar cacheProcessCtoken = function (token, type) {\n\t\treturn _.cache(_.process(g.ctoken2(token), type));\n\t};\n\tvar _F = {}; //function cache\n\n\tvar _get = function (f) {\n\t\t_F[f] = (_F[f] || g.format(f)[0]);\n\t\treturn _F[f];\n\t};\n\n\tg.allformats = function (fx) {\n\t\tvar rx = [];\n\t\tif (fx instanceof Array) {\n\t\t\tfor (var i = 0; i < fx.length; i++) {\n\t\t\t\trx.push(_get(fx[i]));\n\t\t\t}\n\t\t} else {\n\t\t\trx.push(_get(fx));\n\t\t}\n\t\treturn rx;\n\t};\n  \n\tg.formats = function (fx) {\n\t\tif (fx instanceof Array) {\n\t\t\tvar rx = [];\n\t\t\tfor (var i = 0 ; i < fx.length ; i++) {\n\t\t\t\trx.push(_get(fx[i]));\n\t\t\t}\n\t\t\treturn _.any.apply(null, rx);\n\t\t} else {\n\t\t\treturn _get(fx);\n\t\t}\n\t};\n\n\tvar grammarFormats = {\n\t\t timeFormats: function(){\n\t\t\tvar i,\n\t\t\tRTokenKeys = [\n\t\t\t\t\"h\",\n\t\t\t\t\"hh\",\n\t\t\t\t\"H\",\n\t\t\t\t\"HH\",\n\t\t\t\t\"m\",\n\t\t\t\t\"mm\",\n\t\t\t\t\"s\",\n\t\t\t\t\"ss\",\n\t\t\t\t\"ss.s\",\n\t\t\t\t\"z\",\n\t\t\t\t\"zz\"\n\t\t\t],\n\t\t\tRToken = [\n\t\t\t\t/^(0[0-9]|1[0-2]|[1-9])/,\n\t\t\t\t/^(0[0-9]|1[0-2])/,\n\t\t\t\t/^([0-1][0-9]|2[0-3]|[0-9])/,\n\t\t\t\t/^([0-1][0-9]|2[0-3])/,\n\t\t\t\t/^([0-5][0-9]|[0-9])/,\n\t\t\t\t/^[0-5][0-9]/,\n\t\t\t\t/^([0-5][0-9]|[0-9])/,\n\t\t\t\t/^[0-5][0-9]/,\n\t\t\t\t/^[0-5][0-9]\\.[0-9]{1,3}/,\n\t\t\t\t/^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/,\n\t\t\t\t/^((\\+|\\-)\\s*\\d\\d\\d\\d)|((\\+|\\-)\\d\\d\\:?\\d\\d)/\n\t\t\t],\n\t\t\ttokens = [\n\t\t\t\tt.hour,\n\t\t\t\tt.hour,\n\t\t\t\tt.hour,\n\t\t\t\tt.minute,\n\t\t\t\tt.minute,\n\t\t\t\tt.second,\n\t\t\t\tt.second,\n\t\t\t\tt.secondAndMillisecond,\n\t\t\t\tt.timezone,\n\t\t\t\tt.timezone,\n\t\t\t\tt.timezone\n\t\t\t];\n\n\t\t\tfor (i=0; i < RTokenKeys.length; i++) {\n\t\t\t\tcacheProcessRtoken(RTokenKeys[i], RToken[i], tokens[i]);\n\t\t\t}\n\n\t\t\tg.hms = _.cache(_.sequence([g.H, g.m, g.s], g.timePartDelimiter));\n\n\t\t\tg.t = cacheProcessCtoken(\"shortMeridian\", t.meridian);\n\t\t\tg.tt = cacheProcessCtoken(\"longMeridian\", t.meridian);\n\t\t\tg.zzz = cacheProcessCtoken(\"timezone\", t.timezone);\n\n\t\t\tg.timeSuffix = _.each(_.ignore(g.whiteSpace), _.set([ g.tt, g.zzz ]));\n\t\t\tg.time = _.each(_.optional(_.ignore(_.stoken(\"T\"))), g.hms, g.timeSuffix);\n\t\t },\n\t\t dateFormats: function () {\n\t\t\t// pre-loaded rules for different date part order preferences\n\t\t\tvar _setfn = function () {\n\t\t\t\treturn  _.set(arguments, g.datePartDelimiter);\n\t\t\t};\n\t\t\tvar i,\n\t\t\tRTokenKeys = [\n\t\t\t\t\"d\",\n\t\t\t\t\"dd\",\n\t\t\t\t\"M\",\n\t\t\t\t\"MM\",\n\t\t\t\t\"y\",\n\t\t\t\t\"yy\",\n\t\t\t\t\"yyy\",\n\t\t\t\t\"yyyy\"\n\t\t\t],\n\t\t\tRToken = [\n\t\t\t\t/^([0-2]\\d|3[0-1]|\\d)/,\n\t\t\t\t/^([0-2]\\d|3[0-1])/,\n\t\t\t\t/^(1[0-2]|0\\d|\\d)/,\n\t\t\t\t/^(1[0-2]|0\\d)/,\n\t\t\t\t/^(\\d+)/,\n\t\t\t\t/^(\\d\\d)/,\n\t\t\t\t/^(\\d\\d?\\d?\\d?)/,\n\t\t\t\t/^(\\d\\d\\d\\d)/\n\t\t\t],\n\t\t\ttokens = [\n\t\t\t\tt.day,\n\t\t\t\tt.day,\n\t\t\t\tt.month,\n\t\t\t\tt.month,\n\t\t\t\tt.year,\n\t\t\t\tt.year,\n\t\t\t\tt.year,\n\t\t\t\tt.year\n\t\t\t],\n\t\t\teachToken = [\n\t\t\t\t\"ordinalSuffix\",\n\t\t\t\t\"ordinalSuffix\"\n\t\t\t];\n\t\t\tfor (i=0; i < RTokenKeys.length; i++) {\n\t\t\t\tcacheProcessRtoken(RTokenKeys[i], RToken[i], tokens[i], eachToken[i]);\n\t\t\t}\n\n\t\t\tg.MMM = g.MMMM = _.cache(_.process(g.ctoken(\"jan feb mar apr may jun jul aug sep oct nov dec\"), t.month));\n\t\t\tg.ddd = g.dddd = _.cache(_.process(g.ctoken(\"sun mon tue wed thu fri sat\"),\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tthis.weekday = s;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t));\n\n\t\t\tg.day = _fn(g.d, g.dd);\n\t\t\tg.month = _fn(g.M, g.MMM);\n\t\t\tg.year = _fn(g.yyyy, g.yy);\n\n\t\t\tg.mdy = _setfn(g.ddd, g.month, g.day, g.year);\n\t\t\tg.ymd = _setfn(g.ddd, g.year, g.month, g.day);\n\t\t\tg.dmy = _setfn(g.ddd, g.day, g.month, g.year);\n\t\t\t\t\t\t\n\t\t\tg.date = function (s) {\n\t\t\t\treturn ((g[Date.CultureInfo.dateElementOrder] || g.mdy).call(this, s));\n\t\t\t};\n\t\t },\n\t\t relative: function () {\n\t\t\t// relative date / time expressions\n\t\t\tg.orientation = _.process(g.ctoken(\"past future\"),\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tthis.orient = s;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tg.operator = _.process(g.ctoken(\"add subtract\"),\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tthis.operator = s;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t\tg.rday = _.process(g.ctoken(\"yesterday tomorrow today now\"), t.rday);\n\t\t\tg.unit = _.process(g.ctoken(\"second minute hour day week month year\"),\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tthis.unit = s;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t }\n\t};\n\n\tg.buildGrammarFormats = function () {\n\t\t// these need to be rebuilt every time the language changes.\n\t\t_C = {};\n\n\t\tgrammarFormats.timeFormats();\n\t\tgrammarFormats.dateFormats();\n\t\tgrammarFormats.relative();\n\n\t\t\n\t\tg.value = _.process(_.rtoken(/^([-+]?\\d+)?(st|nd|rd|th)?/),\n\t\t\tfunction (s) {\n\t\t\t\treturn function () {\n\t\t\t\t\tthis.value = s.replace(/\\D/g, \"\");\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\t\tg.expression = _.set([g.rday, g.operator, g.value, g.unit, g.orientation, g.ddd, g.MMM ]);\n\n\t\tg.format = _.process(_.many(\n\t\t\t_.any(\n\t\t\t\t// translate format specifiers into grammar rules\n\t\t\t\t_.process(\n\t\t\t\t\t_.rtoken(/^(dd?d?d?(?!e)|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/),\n\t\t\t\t\t\tfunction (fmt) {\n\t\t\t\t\t\t\tif (g[fmt]) {\n\t\t\t\t\t\t\t\treturn g[fmt];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow $D.Parsing.Exception(fmt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t),\n\t\t\t\t\t// translate separator tokens into token rules\n\t\t\t\t\t_.process(_.rtoken(/^[^dMyhHmstz]+/), // all legal separators \n\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\treturn _.ignore(_.stoken(s));\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\t// construct the parser ...\n\t\t\tfunction (rules) {\n\t\t\t\treturn _.process(_.each.apply(null, rules), t.finishExact);\n\t\t\t}\n\t\t);\n\n\t\t// starting rule for general purpose grammar\n\t\tg._start = _.process(_.set([ g.date, g.time, g.expression ],\n\t\tg.generalDelimiter, g.whiteSpace), t.finish);\n\t};\n\n\tg.buildGrammarFormats();\n\t// parsing date format specifiers - ex: \"h:m:s tt\" \n\t// this little guy will generate a custom parser based\n\t// on the format string, ex: g.format(\"h:m:s tt\")\n\t// check for these formats first\n\tg._formats = g.formats([\n\t\t\"\\\"yyyy-MM-ddTHH:mm:ssZ\\\"\",\n\t\t\"yyyy-MM-ddTHH:mm:ss.sz\",\n\t\t\"yyyy-MM-ddTHH:mm:ssZ\",\n\t\t\"yyyy-MM-ddTHH:mm:ssz\",\n\t\t\"yyyy-MM-ddTHH:mm:ss\",\n\t\t\"yyyy-MM-ddTHH:mmZ\",\n\t\t\"yyyy-MM-ddTHH:mmz\",\n\t\t\"yyyy-MM-ddTHH:mm\",\n\t\t\"ddd, MMM dd, yyyy H:mm:ss tt\",\n\t\t\"ddd MMM d yyyy HH:mm:ss zzz\",\n\t\t\"MMddyyyy\",\n\t\t\"ddMMyyyy\",\n\t\t\"Mddyyyy\",\n\t\t\"ddMyyyy\",\n\t\t\"Mdyyyy\",\n\t\t\"dMyyyy\",\n\t\t\"yyyy\",\n\t\t\"Mdyy\",\n\t\t\"dMyy\",\n\t\t\"d\"\n\t]);\n\t\n\t// real starting rule: tries selected formats first, \n\t// then general purpose rule\n\tg.start = function (s) {\n\t\ttry {\n\t\t\tvar r = g._formats.call({}, s);\n\t\t\tif (r[1].length === 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn g._start.call({}, s);\n\t};\n}());"]},"metadata":{},"sourceType":"script"}