{"ast":null,"code":"import React, { useState, useEffect, Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\n\nconst updatePassword = async setResponse => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  const decoded = jwtDecode(token);\n\n  const fetchUserData = async () => {\n    let token = Cookie.get('token');\n    let decoded = jwt_decode(token);\n    let username = decoded.sub;\n    const userUrl = `http://localhost:8080/api/v1/users/`;\n    const userResponse = await fetch(userUrl + username, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token,\n        accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const userData = await userResponse.json();\n    return userData;\n  };\n\n  class Notificaition extends Component {\n    constructor() {\n      super();\n      this.state = {\n        user: null,\n        trades: 0\n      };\n      this.updateSelectedAsset = this.updateSelectedAsset.bind(this);\n      this.updateClickedState = this.updateClickedState.bind(this);\n    }\n\n    async componentDidMount() {\n      const dataObject = await fetchUserData();\n      this.setState({\n        user: dataObject.userData\n      });\n      setInterval(this.loadData, 30000);\n    }\n\n    async loadData() {\n      try {\n        const res = await fetchUserData();\n        this.setState({\n          user: res\n        });\n        console.log(user);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Notificaition/Notification.js"],"names":["React","useState","useEffect","Component","toast","updatePassword","setResponse","url","token","Cookies","get","decoded","jwtDecode","fetchUserData","Cookie","jwt_decode","username","sub","userUrl","userResponse","fetch","method","headers","Authorization","accept","userData","json","Notificaition","constructor","state","user","trades","updateSelectedAsset","bind","updateClickedState","componentDidMount","dataObject","setState","setInterval","loadData","res","console","log","e"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,uCAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,cAAc,GAAG,MAAOC,WAAP,IAAuB;AAC5C,QAAMC,GAAG,GAAG,qCAAZ;AACA,QAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAd;AACA,QAAMC,OAAO,GAAGC,SAAS,CAACJ,KAAD,CAAzB;;AAEA,QAAMK,aAAa,GAAG,YAAY;AAChC,QAAIL,KAAK,GAAGM,MAAM,CAACJ,GAAP,CAAW,OAAX,CAAZ;AACA,QAAIC,OAAO,GAAGI,UAAU,CAACP,KAAD,CAAxB;AACA,QAAIQ,QAAQ,GAAGL,OAAO,CAACM,GAAvB;AAEA,UAAMC,OAAO,GAAI,qCAAjB;AACA,UAAMC,YAAY,GAAG,MAAMC,KAAK,CAACF,OAAO,GAAGF,QAAX,EAAqB;AACnDK,MAAAA,MAAM,EAAE,KAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYf,KADpB;AAEPgB,QAAAA,MAAM,EAAE,kBAFD;AAGP,wBAAgB;AAHT;AAF0C,KAArB,CAAhC;AAQA,UAAMC,QAAQ,GAAG,MAAMN,YAAY,CAACO,IAAb,EAAvB;AAEA,WAAOD,QAAP;AACD,GAjBD;;AAmBA,QAAME,aAAN,SAA4BxB,SAA5B,CAAsC;AACpCyB,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,IAAI,EAAE,IADK;AAEXC,QAAAA,MAAM,EAAE;AAFG,OAAb;AAIA,WAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,WAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEsB,UAAjBE,iBAAiB,GAAG;AACxB,YAAMC,UAAU,GAAG,MAAMvB,aAAa,EAAtC;AAEA,WAAKwB,QAAL,CAAc;AACZP,QAAAA,IAAI,EAAEM,UAAU,CAACX;AADL,OAAd;AAGAa,MAAAA,WAAW,CAAC,KAAKC,QAAN,EAAgB,KAAhB,CAAX;AACD;;AAEa,UAARA,QAAQ,GAAG;AACf,UAAI;AACF,cAAMC,GAAG,GAAG,MAAM3B,aAAa,EAA/B;AACA,aAAKwB,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAEU;AADM,SAAd;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,OAND,CAME,OAAOa,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF;;AA9BmC;AAgCvC,CAxDD","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\n\nconst updatePassword = async (setResponse) => {\n  const url = 'http://localhost:8080/api/v1/users/';\n  const token = Cookies.get('token');\n  const decoded = jwtDecode(token);\n\n  const fetchUserData = async () => {\n    let token = Cookie.get('token');\n    let decoded = jwt_decode(token);\n    let username = decoded.sub;\n\n    const userUrl = `http://localhost:8080/api/v1/users/`;\n    const userResponse = await fetch(userUrl + username, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token,\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    const userData = await userResponse.json();\n\n    return userData;\n  };\n\n  class Notificaition extends Component {\n    constructor() {\n      super();\n      this.state = {\n        user: null,\n        trades: 0,\n      };\n      this.updateSelectedAsset = this.updateSelectedAsset.bind(this);\n      this.updateClickedState = this.updateClickedState.bind(this);\n    }\n\n    async componentDidMount() {\n      const dataObject = await fetchUserData();\n\n      this.setState({\n        user: dataObject.userData,\n      });\n      setInterval(this.loadData, 30000);\n    }\n\n    async loadData() {\n      try {\n        const res = await fetchUserData();\n        this.setState({\n          user: res,\n        });\n        console.log(user);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}