{"ast":null,"code":"import{Line}from'react-chartjs-2';import React,{useEffect,useState}from'react';import'./Chart.css';import dateFormat from'dateformat';import{findAllByTestId}from'@testing-library/dom';import{jsx as _jsx}from\"react/jsx-runtime\";export var Chart=function Chart(props){var dataset=props.tradeData.map(function(obj,index){if(obj.type==='SELL'){return obj.price;}});var labels=props.tradeData.map(function(obj,index){if(obj.type==='SELL'){return dateFormat(obj.timestamp,'mm/yyyy');}});// Format data for use with Chart.js\nvar data={// Reverse labels array to be in the correct order\nlabels:labels,datasets:[{fill:false,tension:0.1,label:props.asset+' Sale Price',fillColor:['rgba(0,10,220,0.5)','rgba(220,0,10,0.5)','rgba(220,0,0,0.5)','rgba(120,250,120,0.5)'],backgroundColor:'rgba(50, 166, 255, 0.62) ',data:dataset,borderColor:'rgba(50, 166, 255, 0.62) ',scaleFontColor:'rgba(50, 166, 255, 1) ',legend:{display:false}}]};var options={borderWidth:3,spanGaps:true,responsive:true,scales:{yAxis:[{type:'time',display:true}]}};return/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Line,{options:options,data:data})});};","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr/supplyr-frontend/src/components/Overview/Chart.js"],"names":["Line","React","useEffect","useState","dateFormat","findAllByTestId","Chart","props","dataset","tradeData","map","obj","index","type","price","labels","timestamp","data","datasets","fill","tension","label","asset","fillColor","backgroundColor","borderColor","scaleFontColor","legend","display","options","borderWidth","spanGaps","responsive","scales","yAxis"],"mappings":"AAAA,OAASA,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,eAAT,KAAgC,sBAAhC,C,2CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAC9B,GAAIC,CAAAA,OAAO,CAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAChD,GAAID,GAAG,CAACE,IAAJ,GAAa,MAAjB,CAAyB,CACvB,MAAOF,CAAAA,GAAG,CAACG,KAAX,CACD,CACF,CAJa,CAAd,CAMA,GAAIC,CAAAA,MAAM,CAAGR,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC/C,GAAID,GAAG,CAACE,IAAJ,GAAa,MAAjB,CAAyB,CACvB,MAAOT,CAAAA,UAAU,CAACO,GAAG,CAACK,SAAL,CAAgB,SAAhB,CAAjB,CACD,CACF,CAJY,CAAb,CAMA;AACA,GAAIC,CAAAA,IAAI,CAAG,CACT;AACAF,MAAM,CAAEA,MAFC,CAITG,QAAQ,CAAE,CACR,CACEC,IAAI,CAAE,KADR,CAEEC,OAAO,CAAE,GAFX,CAGEC,KAAK,CAAEd,KAAK,CAACe,KAAN,CAAc,aAHvB,CAIEC,SAAS,CAAE,CACT,oBADS,CAET,oBAFS,CAGT,mBAHS,CAIT,uBAJS,CAJb,CAUEC,eAAe,CAAE,2BAVnB,CAWEP,IAAI,CAAET,OAXR,CAaEiB,WAAW,CAAE,2BAbf,CAcEC,cAAc,CAAE,wBAdlB,CAeEC,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CAfV,CADQ,CAJD,CAAX,CA0BA,GAAMC,CAAAA,OAAO,CAAG,CACdC,WAAW,CAAE,CADC,CAEdC,QAAQ,CAAE,IAFI,CAGdC,UAAU,CAAE,IAHE,CAIdC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACErB,IAAI,CAAE,MADR,CAEEe,OAAO,CAAE,IAFX,CADK,CADD,CAJM,CAAhB,CAcA,mBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,KAAC,IAAD,EAAM,OAAO,CAAEC,OAAf,CAAwB,IAAI,CAAEZ,IAA9B,EADF,EADF,CAKD,CA3DM","sourcesContent":["import { Line } from 'react-chartjs-2';\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\nimport dateFormat from 'dateformat';\nimport { findAllByTestId } from '@testing-library/dom';\n\nexport const Chart = (props) => {\n  let dataset = props.tradeData.map((obj, index) => {\n    if (obj.type === 'SELL') {\n      return obj.price;\n    }\n  });\n\n  let labels = props.tradeData.map((obj, index) => {\n    if (obj.type === 'SELL') {\n      return dateFormat(obj.timestamp, 'mm/yyyy');\n    }\n  });\n\n  // Format data for use with Chart.js\n  let data = {\n    // Reverse labels array to be in the correct order\n    labels: labels,\n\n    datasets: [\n      {\n        fill: false,\n        tension: 0.1,\n        label: props.asset + ' Sale Price',\n        fillColor: [\n          'rgba(0,10,220,0.5)',\n          'rgba(220,0,10,0.5)',\n          'rgba(220,0,0,0.5)',\n          'rgba(120,250,120,0.5)',\n        ],\n        backgroundColor: 'rgba(50, 166, 255, 0.62) ',\n        data: dataset,\n\n        borderColor: 'rgba(50, 166, 255, 0.62) ',\n        scaleFontColor: 'rgba(50, 166, 255, 1) ',\n        legend: {\n          display: false,\n        },\n      },\n    ],\n  };\n  const options = {\n    borderWidth: 3,\n    spanGaps: true,\n    responsive: true,\n    scales: {\n      yAxis: [\n        {\n          type: 'time',\n          display: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <Line options={options} data={data} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}