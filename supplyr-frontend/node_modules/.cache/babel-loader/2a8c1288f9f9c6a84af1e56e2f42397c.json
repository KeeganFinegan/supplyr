{"ast":null,"code":"var _jsxFileName = \"/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Chart.js\";\nimport { Line } from 'react-chartjs-2';\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart = props => {\n  let dataset = props.tradeData.map(obj => obj.price);\n  let labels = props.tradeData.map(obj => obj.timestamp); // Format data for use with Chart.js\n\n  let data = {\n    // Reverse labels array to be in the correct order\n    labels: labels.reverse(),\n    datasets: [{\n      label: props.asset + ' Sale History',\n      fillColor: ['rgba(0,10,220,0.5)', 'rgba(220,0,10,0.5)', 'rgba(220,0,0,0.5)', 'rgba(120,250,120,0.5)'],\n      backgroundColor: 'rgba(50, 166, 255, 0.62) ',\n      data: dataset.reverse(),\n      height: '400px',\n      width: '500px',\n      borderColor: 'rgba(50, 166, 255, 0.62) ',\n      scaleFontColor: 'rgba(50, 166, 255, 0.62) '\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Y text'\n        }\n      }],\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'X text'\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/keeganfinegan/Documents/2021/SoftwareDevelopment/Assignment/supplyr-frontend/src/components/Overview/Chart.js"],"names":["Line","React","useEffect","useState","Chart","props","dataset","tradeData","map","obj","price","labels","timestamp","data","reverse","datasets","label","asset","fillColor","backgroundColor","height","width","borderColor","scaleFontColor","options","responsive","scales","yAxes","scaleLabel","display","labelString","xAxes"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC9B,MAAIC,OAAO,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,GAAD,IAASA,GAAG,CAACC,KAAjC,CAAd;AAEA,MAAIC,MAAM,GAAGN,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,GAAD,IAASA,GAAG,CAACG,SAAjC,CAAb,CAH8B,CAK9B;;AACA,MAAIC,IAAI,GAAG;AACT;AACAF,IAAAA,MAAM,EAAEA,MAAM,CAACG,OAAP,EAFC;AAITC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEX,KAAK,CAACY,KAAN,GAAc,eADvB;AAEEC,MAAAA,SAAS,EAAE,CACT,oBADS,EAET,oBAFS,EAGT,mBAHS,EAIT,uBAJS,CAFb;AAQEC,MAAAA,eAAe,EAAE,2BARnB;AASEN,MAAAA,IAAI,EAAEP,OAAO,CAACQ,OAAR,EATR;AAUEM,MAAAA,MAAM,EAAE,OAVV;AAWEC,MAAAA,KAAK,EAAE,OAXT;AAYEC,MAAAA,WAAW,EAAE,2BAZf;AAaEC,MAAAA,cAAc,EAAE;AAblB,KADQ;AAJD,GAAX;AAsBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,IADC;AAEVC,UAAAA,WAAW,EAAE;AAFH;AADd,OADK,CADD;AASNC,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE,IADC;AAEVC,UAAAA,WAAW,EAAE;AAFH;AADd,OADK;AATD;AAFM,GAAhB;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEN,OAAf;AAAwB,MAAA,IAAI,EAAEX;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvDM;KAAMT,K","sourcesContent":["import { Line } from 'react-chartjs-2';\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\n\nexport const Chart = (props) => {\n  let dataset = props.tradeData.map((obj) => obj.price);\n\n  let labels = props.tradeData.map((obj) => obj.timestamp);\n\n  // Format data for use with Chart.js\n  let data = {\n    // Reverse labels array to be in the correct order\n    labels: labels.reverse(),\n\n    datasets: [\n      {\n        label: props.asset + ' Sale History',\n        fillColor: [\n          'rgba(0,10,220,0.5)',\n          'rgba(220,0,10,0.5)',\n          'rgba(220,0,0,0.5)',\n          'rgba(120,250,120,0.5)',\n        ],\n        backgroundColor: 'rgba(50, 166, 255, 0.62) ',\n        data: dataset.reverse(),\n        height: '400px',\n        width: '500px',\n        borderColor: 'rgba(50, 166, 255, 0.62) ',\n        scaleFontColor: 'rgba(50, 166, 255, 0.62) ',\n      },\n    ],\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Y text',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'X text',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <Line options={options} data={data} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}